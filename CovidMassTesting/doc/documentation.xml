<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CovidMassTesting</name>
    </assembly>
    <members>
        <member name="M:CovidMassTesting.Controllers.AdminController.CheckSlots(System.String,System.Int32,System.Int32)">
            <summary>
            Shows available days per place
            </summary>
            <param name="testingDay"></param>
            <param name="from">Hour from when testing place is open</param>
            <param name="until">Hour until when testing place is open. 20 means that 20:05 is closed</param>
            <returns>Number of new slots</returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.InviteUser(System.String,System.String,System.String[])">
            <summary>
            Administrator is allowed to invite other users and set their groups
            </summary>
            <param name="email"></param>
            <param name="name"></param>
            <param name="roles"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.IEmailSender">
            <summary>
            Interface for email client
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.IEmailSender.SendEmail(System.String,System.String,CovidMassTesting.Model.Email.IEmail)">
            <summary>
            Send email
            </summary>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.NoEmailSender">
            <summary>
            If no email sender is defined
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.NoEmailSender.SendEmail(System.String,System.String,CovidMassTesting.Model.Email.IEmail)">
            <summary>
            Act as email was sent
            </summary>
            <param name="toEmail"></param>
            <param name="toName"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.SendGridController">
            <summary>
            Sendgrid email sender
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.SendGridController.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.Email.SendGridController},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.SendGridController.SendEmail(System.String,System.String,CovidMassTesting.Model.Email.IEmail)">
            <summary>
            Semd email
            </summary>
            <param name="toEmail"></param>
            <param name="toName"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.SendgridTemplate">
            <summary>
            Sendgrid Email templating : https://sendgrid.com/docs/API_Reference/Web_API_v3/Transactional_Templates/templates.html
            </summary>
        </member>
        <member name="P:CovidMassTesting.Controllers.Email.SendgridTemplate.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Controllers.Email.SendgridTemplate.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.SendgridTemplates">
            <summary>
            List of templates
            </summary>
        </member>
        <member name="P:CovidMassTesting.Controllers.Email.SendgridTemplates.Templates">
            <summary>
            templates
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.InsertOrUpdate(CovidMassTesting.Model.Place)">
            <summary>
            Admin can insert new testing location
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.Delete(CovidMassTesting.Model.Place)">
            <summary>
            Admin can delete testing location
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.GetVisitor(System.String)">
            <summary>
            Testing personell can load data by the code, so that they can verify that the code is the specific user
            </summary>
            <param name="visitorCode"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.GetVisitorByRC(System.String)">
            <summary>
            Testing personell can load data by the personal number, so that they can verify that person legitimity
            </summary>
            <param name="rc">Personal number</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.ConnectVisitorToTest(System.String,System.String)">
            <summary>
            This method is for triage person who scans the visitor bar code, scans the testing set bar code and performs test.
            </summary>
            <param name="visitorCode"></param>
            <param name="testCode"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.Get(System.String,System.String)">
            <summary>
            Public method to show test results to user
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.SetResult(System.String,System.String)">
            <summary>
            This method is for triage person who scans the visitor bar code, scans the testing set bar code and performs test.
            </summary>
            <param name="testCode"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.SlotController.ListDaySlotsByPlace(System.String)">
            <summary>
            Shows available days per place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.UserController">
            <summary>
            Controller that manages user requests
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.PlaceController},CovidMassTesting.Repository.Interface.IUserRepository)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="userRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.List">
            <summary>
            List all public information of all users
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.Preauthenticate(System.String)">
            <summary>
            Preauthenticate. Cohash is important part of hash. This method returns cohash
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.Authenticate(System.String,System.String,System.String)">
            <summary>
            Returns JWT token
            </summary>
            <param name="email"></param>
            <param name="hash"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.ChangePassword(System.String,System.String)">
            <summary>
            Set new password
            </summary>
            <param name="oldHash"></param>
            <param name="newHash"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.Register(CovidMassTesting.Model.Visitor)">
            <summary>
            Public method for pre registration. Result is returned with Visitor.id which is the main identifier of the visit and should be shown in the bar code
            
            Request size is limitted.
            </summary>
            <param name="visitor"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.FormatPhone(System.String)">
            <summary>
            Format phone to slovak standard
            
            0800 123 456 convers to +421800123456
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.IsPhoneNumber(System.String)">
            <summary>
            Validates the phone number +421800123456
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Helpers.Aes">
            <summary>
            https://gist.github.com/magicsih/be06c2f60288b54d9f52856feb96ce8c
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.Dispose">
            <summary>
            For IDisposable
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.Dispose(System.Boolean)">
            <summary>
            Protected implementation of Dispose pattern.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:CovidMassTesting.Model.Email.IEmail">
            <summary>
            Email abstraction class
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.IEmail.TemplateId">
            <summary>
            Identifier of the template
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.InvitationEmail">
            <summary>
            User with permissions to invite other people can invite them and 
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.InvitationEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.PersonalDataRemovedEmail">
            <summary>
            Email sent when test was not positive not negative, and needs to be repeated
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.PersonalDataRemovedEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.PersonalDataRemovedEmail.Name">
            <summary>
            Visitor name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.RolesUpdatedEmail">
            <summary>
            User with permissions to invite other people can invite them and 
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.RolesUpdatedEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorRegistrationEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.VisitorTestingInProcessEmail">
            <summary>
            Sends information to visitor that his test has been processed
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingInProcessEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingInProcessEmail.Name">
            <summary>
            Visitor name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.VisitorTestingResultEmail">
            <summary>
            Sends information to visitor that his test has been processed
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingResultEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingResultEmail.Name">
            <summary>
            Visitor name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.VisitorTestingToBeRepeatedEmail">
            <summary>
            Email sent when test was not positive not negative, and needs to be repeated
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingToBeRepeatedEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingToBeRepeatedEmail.Name">
            <summary>
            Visitor name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.LimitPer5MinSlot">
            <summary>
            Registration in minute slot is rejected if more then this amount of people are registered
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.LimitPer1HourSlot">
            <summary>
            Registration in hour slot is rejected if more then this amount of people are registered
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Settings.SendGridConfiguration">
            <summary>
            configuration for mailing through sendgrid
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.SendGridConfiguration.MailerApiKey">
            <summary>
            API key
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.SendGridConfiguration.MailerFromName">
            <summary>
            From name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.SendGridConfiguration.MailerFromEmail">
            <summary>
            From email
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Visitor">
            <summary>
            Data stored in this object are encrypted
            
            Stores personal data, contact data as well as medical condition
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.CheckSlots(System.Int64,System.String,System.Int32,System.Int32)">
            <summary>
            Checks if all slots for the day, and testing place has been created
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.RedisRepository.UserRepository">
            <summary>
            User repository manages users and stores user data securly in the database
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Repository.RedisRepository.UserRepository},StackExchange.Redis.Extensions.Core.Abstractions.IRedisCacheClient,CovidMassTesting.Controllers.Email.IEmailSender)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="logger"></param>
            <param name="redisCacheClient"></param>
            <param name="emailSender"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Add(CovidMassTesting.Model.User)">
            <summary>
            Inserts new user
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.GenerateRandomPassword(Microsoft.AspNetCore.Identity.PasswordOptions)">
            <summary>
            Generates a Random Password
            respecting the given strength requirements.
            </summary>
            <param name="opts">A valid PasswordOptions object
            containing the password strength requirements.</param>
            <returns>A random password</returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Set(CovidMassTesting.Model.User,System.Boolean)">
            <summary>
            Set user. Encodes and stores to db.
            </summary>
            <param name="user"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Get(System.String)">
            <summary>
            Decode encrypted user data
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.ListAll">
            <summary>
            Lists all users 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Preauthenticate(System.String)">
            <summary>
            Returns cohash
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Authenticate(System.String,System.String,System.String)">
            <summary>
            Returns JWT token
            </summary>
            <param name="email"></param>
            <param name="hash"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.ChangePassword(System.String,System.String,System.String)">
            <summary>
            Change password
            </summary>
            <param name="email">Email</param>
            <param name="oldHash">Old password</param>
            <param name="newHash">New password</param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Startup">
            <summary>
            Startup class
            </summary>
        </member>
        <member name="M:CovidMassTesting.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:CovidMassTesting.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
        </member>
        <member name="M:CovidMassTesting.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,CovidMassTesting.Repository.Interface.IUserRepository,Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Startup})">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="userRepository"></param>        
        </member>
    </members>
</doc>
