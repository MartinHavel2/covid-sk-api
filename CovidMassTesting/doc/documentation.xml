<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CovidMassTesting</name>
    </assembly>
    <members>
        <member name="M:CovidMassTesting.Controllers.AdminController.CheckSlots(System.String,System.Int32,System.Int32)">
            <summary>
            Shows available days per place
            </summary>
            <param name="testingDay"></param>
            <param name="from">Hour from when testing place is open</param>
            <param name="until">Hour until when testing place is open. 20 means that 20:05 is closed</param>
            <returns>Number of new slots</returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.InviteUser(System.String,System.String,System.String[])">
            <summary>
            Administrator is allowed to invite other users and set their groups
            </summary>
            <param name="email"></param>
            <param name="name"></param>
            <param name="roles"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.AdminController.RemoveUser(System.String)">
            <summary>
            Administrator is allowed to invite other users and set their groups
            </summary>
            <param name="email"></param>
            <param name="name"></param>
            <param name="roles"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.IEmailSender">
            <summary>
            Interface for email client
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.IEmailSender.SendEmail(System.String,System.String,CovidMassTesting.Model.Email.IEmail)">
            <summary>
            Send email
            </summary>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.NoEmailSender">
            <summary>
            If no email sender is defined
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.NoEmailSender.SendEmail(System.String,System.String,CovidMassTesting.Model.Email.IEmail)">
            <summary>
            Act as email was sent
            </summary>
            <param name="toEmail"></param>
            <param name="toName"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.SendGridController">
            <summary>
            Sendgrid email sender
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.SendGridController.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.Email.SendGridController},Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.Email.SendGridController.SendEmail(System.String,System.String,CovidMassTesting.Model.Email.IEmail)">
            <summary>
            Semd email
            </summary>
            <param name="toEmail"></param>
            <param name="toName"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.SendgridTemplate">
            <summary>
            Sendgrid Email templating : https://sendgrid.com/docs/API_Reference/Web_API_v3/Transactional_Templates/templates.html
            </summary>
        </member>
        <member name="P:CovidMassTesting.Controllers.Email.SendgridTemplate.Id">
            <summary>
            Id
            </summary>
        </member>
        <member name="P:CovidMassTesting.Controllers.Email.SendgridTemplate.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Controllers.Email.SendgridTemplates">
            <summary>
            List of templates
            </summary>
        </member>
        <member name="P:CovidMassTesting.Controllers.Email.SendgridTemplates.Templates">
            <summary>
            templates
            </summary>
        </member>
        <member name="T:CovidMassTesting.Controllers.PlaceController">
            <summary>
            Manages places
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.PlaceController},CovidMassTesting.Repository.Interface.IPlaceRepository,CovidMassTesting.Repository.Interface.IUserRepository)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="placeRepository"></param>
            <param name="userRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.List">
            <summary>
            List places
            
            Contains live statistics of users, registered, infected and healthy visitors
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.InsertOrUpdate(CovidMassTesting.Model.Place)">
            <summary>
            Admin can insert new testing location
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.PlaceController.Delete(CovidMassTesting.Model.Place)">
            <summary>
            Admin can delete testing location
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.ResultController">
            <summary>
            This controller manages test results
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.ResultController},CovidMassTesting.Repository.Interface.IVisitorRepository,CovidMassTesting.Repository.Interface.IUserRepository)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="visitorRepository"></param>
            <param name="userRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.GetVisitor(System.String)">
            <summary>
            Testing personell can load data by the code, so that they can verify that the code is the specific user
            </summary>
            <param name="visitorCode"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.GetVisitorByRC(System.String)">
            <summary>
            Testing personell can load data by the personal number, so that they can verify that person legitimity
            </summary>
            <param name="rc">Personal number</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.ConnectVisitorToTest(System.String,System.String)">
            <summary>
            This method is for triage person who scans the visitor bar code, scans the testing set bar code and performs test.
            </summary>
            <param name="visitorCode"></param>
            <param name="testCode"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.Get(System.String,System.String)">
            <summary>
            Public method to show test results to user
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.RemoveTest(System.String,System.String)">
            <summary>
            Public method to remove user test from database and all his private information
            
            It is possible to remove this test only when test is marked as negative
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.SetResult(System.String,System.String)">
            <summary>
            This method is for triage person who scans the visitor bar code, scans the testing set bar code and performs test.
            </summary>
            <param name="testCode"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.GetNextTest">
            <summary>
            This method is for person who writes certificates on paper
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.ResultController.RemoveFromDocQueue(System.String)">
            <summary>
            This method removes test from queue
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.SlotController.ListDaySlotsByPlace(System.String)">
            <summary>
            Shows available days per place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.UserController">
            <summary>
            Controller that manages user requests
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.PlaceController},CovidMassTesting.Repository.Interface.IUserRepository)">
            <summary>
            Constructor
            </summary>
            <param name="logger"></param>
            <param name="userRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.List">
            <summary>
            List all public information of all users
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.SetLocation(System.String)">
            <summary>
            Place at which person is assigned. All person's registrations will be placed to this location
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.Preauthenticate(System.String)">
            <summary>
            Preauthenticate. Cohash is important part of hash. This method returns cohash
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.Authenticate(System.String,System.String,System.String)">
            <summary>
            Returns JWT token
            </summary>
            <param name="email"></param>
            <param name="hash"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.UserController.ChangePassword(System.String,System.String)">
            <summary>
            Set new password
            </summary>
            <param name="oldHash"></param>
            <param name="newHash"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Controllers.VisitorController">
            <summary>
            This controller manages public registrations
            </summary>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.#ctor(Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Controllers.VisitorController},CovidMassTesting.Repository.Interface.ISlotRepository,CovidMassTesting.Repository.Interface.IVisitorRepository,CovidMassTesting.Repository.Interface.IPlaceRepository)">
            <summary>
            constructor
            </summary>
            <param name="logger"></param>
            <param name="slotRepository"></param>
            <param name="visitorRepository"></param>
            <param name="placeRepository"></param>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.Register(CovidMassTesting.Model.Visitor)">
            <summary>
            Public method for pre registration. Result is returned with Visitor.id which is the main identifier of the visit and should be shown in the bar code
            
            Request size is limitted.
            </summary>
            <param name="visitor"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Controllers.VisitorController.RegisterByManager(CovidMassTesting.Model.Visitor)">
            <summary>
            Registration manager can register visitor
            </summary>
            <param name="visitor"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Helpers.Aes">
            <summary>
            https://gist.github.com/magicsih/be06c2f60288b54d9f52856feb96ce8c
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.Dispose">
            <summary>
            For IDisposable
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.Aes.Dispose(System.Boolean)">
            <summary>
            Protected implementation of Dispose pattern.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="T:CovidMassTesting.Helpers.Hash">
            <summary>
            Hash helper
            </summary>
        </member>
        <member name="M:CovidMassTesting.Helpers.Hash.GetSHA256Hash(System.Byte[])">
            <summary>
            Allows to make hash of any string
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.Email.IEmail">
            <summary>
            Email abstraction class
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.IEmail.TemplateId">
            <summary>
            Identifier of the template
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.InvitationEmail">
            <summary>
            User with permissions to invite other people can invite them and 
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.InvitationEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.PersonalDataRemovedEmail">
            <summary>
            Email sent when test was not positive not negative, and needs to be repeated
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.PersonalDataRemovedEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.PersonalDataRemovedEmail.Name">
            <summary>
            Visitor name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.RolesUpdatedEmail">
            <summary>
            User with permissions to invite other people can invite them and 
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.RolesUpdatedEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorRegistrationEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.VisitorTestingInProcessEmail">
            <summary>
            Sends information to visitor that his test has been processed
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingInProcessEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingInProcessEmail.Name">
            <summary>
            Visitor name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.VisitorTestingResultEmail">
            <summary>
            Sends information to visitor that his test has been processed
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingResultEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingResultEmail.Name">
            <summary>
            Visitor name
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Email.VisitorTestingToBeRepeatedEmail">
            <summary>
            Email sent when test was not positive not negative, and needs to be repeated
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingToBeRepeatedEmail.TemplateId">
            <summary>
            Template identifier
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Email.VisitorTestingToBeRepeatedEmail.Name">
            <summary>
            Visitor name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.LimitPer5MinSlot">
            <summary>
            Registration in minute slot is rejected if more then this amount of people are registered
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Place.LimitPer1HourSlot">
            <summary>
            Registration in hour slot is rejected if more then this amount of people are registered
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Settings.SendGridConfiguration">
            <summary>
            configuration for mailing through sendgrid
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.SendGridConfiguration.MailerApiKey">
            <summary>
            API key
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.SendGridConfiguration.MailerFromName">
            <summary>
            From name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.SendGridConfiguration.MailerFromEmail">
            <summary>
            From email
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Settings.User">
            <summary>
            Configuration user
            
            Users in the configurataion cannot be deleted
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.User.Name">
            <summary>
            User name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.User.Email">
            <summary>
            Password will be sent to this email in first run
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.User.Password">
            <summary>
            Do not setup password. This is for tesing purposes only.
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.Settings.User.Roles">
            <summary>
            If not defined, Admin role is set
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.TestResult">
            <summary>
            Test results strings
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.NotTaken">
            <summary>
            Waiting for visitor to take the test
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.TestIsBeingProcessing">
            <summary>
            Test has been taken by visitor and waiting for test results
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.TestMustBeRepeated">
            <summary>
            Test result is failed test, and must be repeated
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.PositiveWaitingForCertificate">
            <summary>
            Test result is positive. Waiting for visitor to take the certificate
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.PositiveCertificateTaken">
            <summary>
            Test result is positive. Certificate has been given to visitor.
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.NegativeWaitingForCertificate">
            <summary>
            Test result is negative. Waiting for visitor to take the certificate
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.TestResult.NegativeCertificateTaken">
            <summary>
            Test result is negative. Certificate has been given to visitor.
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Token">
            <summary>
            Token management
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Token.Claims">
            <summary>
            Claim names
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Token.Claims.Role">
            <summary>
            Roles claim identifier
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Token.Claims.Name">
            <summary>
            Name claim identifier
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Token.Claims.Email">
            <summary>
            Email claim identifier
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Token.Groups">
            <summary>
            List of roles
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Token.Groups.Admin">
            <summary>
            Admin can create users, places, set dates, and all methods with other roles
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Token.Groups.PasswordProtected">
            <summary>
            User with this role can not change password
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Token.Groups.RegistrationManager">
            <summary>
            User in this role can fetch users by the registration code
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Token.Groups.MedicTester">
            <summary>
            User with this role can assign test bar code to the registed user
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Token.Groups.DocumentManager">
            <summary>
            User with this role can export data of all infected users and pass them to covid center
            </summary>
        </member>
        <member name="F:CovidMassTesting.Model.Token.Groups.MedicLab">
            <summary>
            User with this role can set testing results
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.Token.GetEmail(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Get email from claim
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.GetName(System.Security.Claims.ClaimsPrincipal)">
            <summary>
            Get name from claim
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsAdmin(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository)">
            <summary>
            Checks if user is admin
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsPasswordProtected(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository)">
            <summary>
            Check if user has password protected .. Created for demo users
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsRegistrationManager(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository)">
            <summary>
            Checks if user has role Registration Manager
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsMedicTester(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository)">
            <summary>
            Checks if user has role Medic Tester
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsMedicLab(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository)">
            <summary>
            Checks if user has role Medic Lab
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.IsDocumentManager(System.Security.Claims.ClaimsPrincipal,CovidMassTesting.Repository.Interface.IUserRepository)">
            <summary>
            Check if user has role Document Manager
            </summary>
            <param name="user"></param>
            <param name="userRepository"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Model.Token.CreateToken(CovidMassTesting.Model.User,Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Method creates jwt token
            </summary>
            <param name="usr">User object</param>
            <param name="configuration">APP Configuran</param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.User">
            <summary>
            User model
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.Email">
            <summary>
            User email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.Roles">
            <summary>
            List of roles
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.PswHash">
            <summary>
            Password
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.CoHash">
            <summary>
            Cohash
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.User.Place">
            <summary>
            Place at which person is assigned. All person's registrations will be placed to this location
            </summary>
        </member>
        <member name="M:CovidMassTesting.Model.User.ToPublic">
            <summary>
            Converts to public export (password is not sent out)
            </summary>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Model.UserPublic">
            <summary>
            User public object
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.UserPublic.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.UserPublic.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.UserPublic.Roles">
            <summary>
            List of roles
            </summary>
        </member>
        <member name="P:CovidMassTesting.Model.UserPublic.Place">
            <summary>
            Place at which person is assigned. All person's registrations will be placed to this location
            </summary>
        </member>
        <member name="T:CovidMassTesting.Model.Visitor">
            <summary>
            Data stored in this object are encrypted
            
            Stores personal data, contact data as well as medical condition
            </summary>
        </member>
        <member name="T:CovidMassTesting.Repository.Interface.IPlaceRepository">
            <summary>
            Place repository interface for dependency injection
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.DecrementPlaceRegistrations(System.String)">
            <summary>
            Decrement registrations at place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.IncrementPlaceRegistrations(System.String)">
            <summary>
            Increment registrations at place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.IncrementPlaceHealthy(System.String)">
            <summary>
            increment healthy visitors
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.IncrementPlaceSick(System.String)">
            <summary>
            increment sick visitors
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.GetPlace(System.String)">
            <summary>
            Returns place
            </summary>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.ListAll">
            <summary>
            List all places
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.Set(CovidMassTesting.Model.Place)">
            <summary>
            Set new place object
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IPlaceRepository.Delete(CovidMassTesting.Model.Place)">
            <summary>
            Admin can remove place
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.Interface.IUserRepository">
            <summary>
            User repository interface for dependency injection
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.Add(CovidMassTesting.Model.User)">
            <summary>
            Create user
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.ListAll">
            <summary>
            List all users
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.CreateAdminUsersFromConfiguration">
            <summary>
            Create admins from configuration
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.Preauthenticate(System.String)">
            <summary>
            Returns cohash
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.Authenticate(System.String,System.String,System.String)">
            <summary>
            Authenticates user
            Returns jwt if successful
            </summary>
            <param name="email"></param>
            <param name="hash"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.ChangePassword(System.String,System.String,System.String)">
            <summary>
            Change user password
            </summary>
            <param name="email"></param>
            <param name="oldHash"></param>
            <param name="newHash"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.Remove(System.String)">
            <summary>
            Deletes user
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.InAnyGroup(System.String,System.String[])">
            <summary>
            Checks if user is in any of selected groups
            </summary>
            <param name="email"></param>
            <param name="role"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.SetLocation(System.String,System.String)">
            <summary>
            Registration Manager can select place. All his registrations will be placed at this location
            </summary>
            <param name="v"></param>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IUserRepository.GetPublicUser(System.String)">
            <summary>
            Get public user data.. eg location
            </summary>
            <param name="managerEmail"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.Interface.IVisitorRepository">
            <summary>
            Visitor repository interface for dependency injection
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.Add(CovidMassTesting.Model.Visitor)">
            <summary>
            Creates new visitor
            </summary>
            <param name="visitor"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.Set(CovidMassTesting.Model.Visitor,System.Boolean)">
            <summary>
            Sets the visitor to the database
            </summary>
            <param name="visitor"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetTest(System.Int32,System.String)">
            <summary>
            Get test result for public
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.RemoveTest(System.Int32,System.String)">
            <summary>
            Removes test on wish of user when visitor was tested negative
            </summary>
            <param name="code"></param>
            <param name="pass"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.UpdateTestingState(System.Int32,System.String)">
            <summary>
            Update test state of visitor
            </summary>
            <param name="code"></param>
            <param name="state"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.ConnectVisitorToTest(System.Int32,System.String)">
            <summary>
            Bind visitor to specific test
            </summary>
            <param name="codeInt"></param>
            <param name="testCodeClear"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetVisitor(System.Int32)">
            <summary>
            Load visitor
            </summary>
            <param name="codeInt"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.Register(CovidMassTesting.Model.Visitor,System.String)">
            <summary>
            Public registration
            </summary>
            <param name="visitor"></param>
            <param name="managerEmail"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.SetTestResult(System.String,System.String)">
            <summary>
            Set test result
            </summary>
            <param name="testCode"></param>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetVisitorByPersonalNumber(System.String)">
            <summary>
            Get visitor by personal number
            </summary>
            <param name="rc"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.GetNextTest">
            <summary>
            Document manager can fetch one visitor from executed tests
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.Interface.IVisitorRepository.RemoveFromDocQueueAndSetTestStateAsTaken(System.String)">
            <summary>
            Removes test from test queue and mark test as taken
            </summary>
            <param name="testId"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.MockRepository.UserRepository">
            <summary>
            In memory user repository
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILoggerFactory,StackExchange.Redis.Extensions.Core.Abstractions.IRedisCacheClient,CovidMassTesting.Controllers.Email.IEmailSender)">
            <summary>
            constructor
            </summary>
            <param name="configuration"></param>
            <param name="loggerFactory"></param>
            <param name="redisCacheClient"></param>
            <param name="emailSender"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.Set(CovidMassTesting.Model.User,System.Boolean)">
            <summary>
            set user
            </summary>
            <param name="user"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.Get(System.String)">
            <summary>
            Gets user
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.ListAll">
            <summary>
            Returns all users
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.MockRepository.UserRepository.Remove(System.String)">
            <summary>
            Removes user
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.CheckSlots(System.Int64,System.String,System.Int32,System.Int32)">
            <summary>
            Checks if all slots for the day, and testing place has been created
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.SlotRepository.GetCurrentSlot(System.String)">
            <summary>
            Get current slot
            </summary>
            <param name="place"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Repository.RedisRepository.UserRepository">
            <summary>
            User repository manages users and stores user data securly in the database
            </summary>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Repository.RedisRepository.UserRepository},StackExchange.Redis.Extensions.Core.Abstractions.IRedisCacheClient,CovidMassTesting.Controllers.Email.IEmailSender)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
            <param name="logger"></param>
            <param name="redisCacheClient"></param>
            <param name="emailSender"></param>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Add(CovidMassTesting.Model.User)">
            <summary>
            Inserts new user
            </summary>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.GenerateRandomPassword(Microsoft.AspNetCore.Identity.PasswordOptions)">
            <summary>
            Generates a Random Password
            respecting the given strength requirements.
            </summary>
            <param name="opts">A valid PasswordOptions object
            containing the password strength requirements.</param>
            <returns>A random password</returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Set(CovidMassTesting.Model.User,System.Boolean)">
            <summary>
            Set user. Encodes and stores to db.
            </summary>
            <param name="user"></param>
            <param name="mustBeNew"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Remove(System.String)">
            <summary>
            Removes user.
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Get(System.String)">
            <summary>
            Decode encrypted user data
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.ListAll">
            <summary>
            Lists all users 
            </summary>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.SetLocation(System.String,System.String)">
            <summary>
            Registration manager can set his place at which he performs tests
            </summary>
            <param name="email"></param>
            <param name="placeId"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Preauthenticate(System.String)">
            <summary>
            Returns cohash
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.Authenticate(System.String,System.String,System.String)">
            <summary>
            Returns JWT token
            </summary>
            <param name="email"></param>
            <param name="hash"></param>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.ChangePassword(System.String,System.String,System.String)">
            <summary>
            Change password
            
            If successful, returns new JWT token
            </summary>
            <param name="email">Email</param>
            <param name="oldHash">Old password</param>
            <param name="newHash">New password</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.InAnyGroup(System.String,System.String[])">
            <summary>
            Checks if user with specified email has any of reqested groups
            </summary>
            <param name="email">User email</param>
            <param name="roles">Search any of this roles</param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.UserRepository.GetPublicUser(System.String)">
            <summary>
            Returns public information about specific user
            </summary>
            <param name="email"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.Register(CovidMassTesting.Model.Visitor,System.String)">
            <summary>
            Public registration
            </summary>
            <param name="visitor"></param>
            <param name="managerEmail"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.FormatPhone(System.String)">
            <summary>
            Format phone to slovak standard
            
            0800 123 456 convers to +421800123456
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:CovidMassTesting.Repository.RedisRepository.VisitorRepository.IsPhoneNumber(System.String)">
            <summary>
            Validates the phone number +421800123456
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="T:CovidMassTesting.Startup">
            <summary>
            Startup class
            </summary>
        </member>
        <member name="M:CovidMassTesting.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="M:CovidMassTesting.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            This method gets called by the runtime. Use this method to add services to the container.
            </summary>
        </member>
        <member name="M:CovidMassTesting.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder,Microsoft.AspNetCore.Hosting.IWebHostEnvironment,CovidMassTesting.Repository.Interface.IUserRepository,Microsoft.Extensions.Logging.ILogger{CovidMassTesting.Startup})">
            <summary>
            This method gets called by the runtime. Use this method to configure the HTTP request pipeline.
            </summary>
            <param name="app"></param>
            <param name="env"></param>
            <param name="userRepository"></param>        
        </member>
    </members>
</doc>
